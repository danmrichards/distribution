// Package v1 provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package v1

import (
	"time"
)

type scopeKey string

const (
	ApiKeyAuthScopes scopeKey = "ApiKeyAuth.Scopes"
)

// Badge defines the model for badge.
type Badge struct {
	Created       *time.Time `json:"created,omitempty"`
	CreatedBy     *string    `json:"created_by,omitempty"`
	CreatedByName *string    `json:"created_by_name,omitempty"`
	Name          *string    `json:"name,omitempty"`
	Releaseid     *string    `json:"releaseid,omitempty"`
	Releasenum    *int       `json:"releasenum,omitempty"`
}

// BadgeAssign defines the model for badgeAssign.
type BadgeAssign struct {
	Name       string  `json:"name"`
	Releaseid  *string `json:"releaseid,omitempty"`
	Releasenum *int    `json:"releasenum,omitempty"`
}

// Bucket defines the model for bucket.
type Bucket struct {
	Attributes  *BucketAttributes  `json:"attributes,omitempty"`
	Changes     *Changecount       `json:"changes,omitempty"`
	Created     *time.Time         `json:"created,omitempty"`
	Description *string            `json:"description,omitempty"`
	Id          *string            `json:"id,omitempty"`
	LastRelease *Release           `json:"last_release,omitempty"`
	Name        *string            `json:"name,omitempty"`
	Permissions *BucketPermissions `json:"permissions,omitempty"`
	Private     *bool              `json:"private,omitempty"`
	Projectguid *string            `json:"projectguid,omitempty"`
}

// BucketAttributes defines the model for bucketAttributes.
type BucketAttributes struct {
	PromoteOnly *bool `json:"promote_only,omitempty"`
}

// BucketCreate defines the model for bucketCreate.
type BucketCreate struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
	Private     *bool   `json:"private,omitempty"`
	Projectguid string  `json:"projectguid"`
}

// BucketPermissions defines the model for bucketPermissions.
type BucketPermissions struct {
	BucketPromote *bool `json:"bucket_promote,omitempty"`
	BucketRead    *bool `json:"bucket_read,omitempty"`
	BucketRelease *bool `json:"bucket_release,omitempty"`
	BucketWrite   *bool `json:"bucket_write,omitempty"`
}

// BucketUpdate defines the model for bucketUpdate.
type BucketUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// Bucketaccesstoken defines the model for bucketaccesstoken.
type Bucketaccesstoken struct {
	Created     *time.Time `json:"created,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Token       *string    `json:"token,omitempty"`
}

// BucketaccesstokenCreate defines the model for bucketaccesstokenCreate.
type BucketaccesstokenCreate struct {
	Description *string `json:"description,omitempty"`
}

// BucketaccesstokenUpdate defines the model for bucketaccesstokenUpdate.
type BucketaccesstokenUpdate struct {
	Description *string `json:"description,omitempty"`
}

// Changecount defines the model for changecount.
type Changecount struct {
	Add                *int       `json:"add,omitempty"`
	Delete             *int       `json:"delete,omitempty"`
	LastModified       *time.Time `json:"last_modified,omitempty"`
	LastModifiedBy     *string    `json:"last_modified_by,omitempty"`
	LastModifiedByName *string    `json:"last_modified_by_name,omitempty"`
	Loading            *bool      `json:"loading,omitempty"`
	Unchanged          *int       `json:"unchanged,omitempty"`
	Update             *int       `json:"update,omitempty"`
}

// Entry defines the model for entry.
type Entry struct {
	Complete *bool `json:"complete,omitempty"`

	// The "content_hash" should be MD5sum hash value.
	ContentHash        *string                 `json:"content_hash,omitempty"`
	ContentLink        *string                 `json:"content_link,omitempty"`
	ContentSize        *int                    `json:"content_size,omitempty"`
	ContentType        *string                 `json:"content_type,omitempty"`
	CurrentVersionid   *string                 `json:"current_versionid,omitempty"`
	Entryid            *string                 `json:"entryid,omitempty"`
	Labels             *[]string               `json:"labels,omitempty"`
	LastModified       *time.Time              `json:"last_modified,omitempty"`
	LastModifiedBy     *string                 `json:"last_modified_by,omitempty"`
	LastModifiedByName *string                 `json:"last_modified_by_name,omitempty"`
	Link               *string                 `json:"link,omitempty"`
	Metadata           *map[string]interface{} `json:"metadata,omitempty"`
	Path               *string                 `json:"path,omitempty"`
	UpdatedAt          *time.Time              `json:"updated_at,omitempty"`
}

// EntryCreate defines the model for entryCreate.
type EntryCreate struct {

	// The "content_hash" should be MD5sum hash value.
	ContentHash string                  `json:"content_hash"`
	ContentSize int                     `json:"content_size"`
	ContentType *string                 `json:"content_type,omitempty"`
	Labels      *[]string               `json:"labels,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
	Path        string                  `json:"path"`
}

// EntryCreateByPath defines the model for entryCreateByPath.
type EntryCreateByPath struct {

	// The "content_hash" should be MD5sum hash value.
	ContentHash string                  `json:"content_hash"`
	ContentSize int                     `json:"content_size"`
	ContentType *string                 `json:"content_type,omitempty"`
	Labels      *[]string               `json:"labels,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
}

// EntryUpdate defines the model for entryUpdate.
type EntryUpdate struct {

	// The "content_hash" should be MD5sum hash value.
	ContentHash *string                 `json:"content_hash,omitempty"`
	ContentSize *int                    `json:"content_size,omitempty"`
	ContentType *string                 `json:"content_type,omitempty"`
	Labels      *[]string               `json:"labels,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
}

// ErrorCodes defines the model for errorCodes.
type ErrorCodes int32

// Httperror defines the model for httperror.
type Httperror struct {

	// 0 - OK
	// 1 - Invalid argument
	// 2 - Out of range
	// 3 - Unauthenticated
	// 4 - Permission denied
	// 5 - Not found
	// 6 - Already exists
	// 7 - Unknown error
	// 8 - Internal error
	// 9 - Invalid operation
	// 10 - Organization Activation is needed
	// 11 - You have an entry specified, but the matching file has not been uploaded, or the file size, or md5 hash of what was uploaded does not match
	// 12 - too many requests
	Code    *ErrorCodes `json:"code,omitempty"`
	Details *[]string   `json:"details,omitempty"`
	Reason  *string     `json:"reason,omitempty"`
}

// MetricQuantity defines the model for metricQuantity.
type MetricQuantity struct {
	Quantity *int `json:"quantity,omitempty"`
}

// Nocontent defines the model for nocontent.
type Nocontent map[string]interface{}

// Org defines the model for org.
type Org struct {
	Id          *string `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Orgid       *string `json:"orgid,omitempty"`
	TosAccepted *bool   `json:"tos_accepted,omitempty"`
}

// OrgTosUpdate defines the model for orgTosUpdate.
type OrgTosUpdate struct {
	TosVersion *int `json:"tos_version,omitempty"`
}

// Orgusage defines the model for orgusage.
type Orgusage struct {
	Id        *string    `json:"id,omitempty"`
	StartTime *time.Time `json:"start_time,omitempty"`
	Usage     *[]Usage   `json:"usage,omitempty"`
}

// Permission defines the model for permission.
type Permission struct {
	Action     *string `json:"action,omitempty"`
	Permission *string `json:"permission,omitempty"`
	Resource   *string `json:"resource,omitempty"`
}

// PermissionCreate defines the model for permissionCreate.
type PermissionCreate struct {
	Action     string `json:"action"`
	Permission string `json:"permission"`
}

// PermissionUpdate defines the model for permissionUpdate.
type PermissionUpdate struct {
	Action     string `json:"action"`
	Permission string `json:"permission"`
}

// PromoteBucketAPIResponse defines the model for promoteBucketAPIResponse.
type PromoteBucketAPIResponse struct {
	PromotionId *string `json:"promotion_id,omitempty"`
}

// Promotebucket defines the model for promotebucket.
type Promotebucket struct {
	FromRelease string `json:"from_release"`

	// If unset, the release notes of the "from release" will be used.
	Notes    *string `json:"notes,omitempty"`
	ToBucket string  `json:"to_bucket"`
}

// Promotion defines the model for promotion.
type Promotion struct {
	Error           *string `json:"error,omitempty"`
	FromBucketId    *string `json:"from_bucket_id,omitempty"`
	FromBucketName  *string `json:"from_bucket_name,omitempty"`
	FromReleaseId   *string `json:"from_release_id,omitempty"`
	PromotionId     *string `json:"promotion_id,omitempty"`
	PromotionStatus *string `json:"promotion_status,omitempty"`
	ToBucketId      *string `json:"to_bucket_id,omitempty"`
	ToBucketName    *string `json:"to_bucket_name,omitempty"`
	ToReleaseId     *string `json:"to_release_id,omitempty"`
}

// Release defines the model for release.
type Release struct {
	Badges              *[]Badge                `json:"badges,omitempty"`
	Changes             *Changecount            `json:"changes,omitempty"`
	ContentHash         *string                 `json:"content_hash,omitempty"`
	ContentSize         *int                    `json:"content_size,omitempty"`
	Created             *time.Time              `json:"created,omitempty"`
	CreatedBy           *string                 `json:"created_by,omitempty"`
	CreatedByName       *string                 `json:"created_by_name,omitempty"`
	EntriesLink         *string                 `json:"entries_link,omitempty"`
	Metadata            *map[string]interface{} `json:"metadata,omitempty"`
	Notes               *string                 `json:"notes,omitempty"`
	PromotedFromBucket  *string                 `json:"promoted_from_bucket,omitempty"`
	PromotedFromRelease *string                 `json:"promoted_from_release,omitempty"`
	Releaseid           *string                 `json:"releaseid,omitempty"`
	Releasenum          *int                    `json:"releasenum,omitempty"`
}

// ReleaseCreate defines the model for releaseCreate.
type ReleaseCreate struct {
	Entries  *[]ReleaseentryCreate   `json:"entries,omitempty"`
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	Notes    *string                 `json:"notes,omitempty"`
	Snapshot *time.Time              `json:"snapshot,omitempty"`
}

// ReleaseUpdate defines the model for releaseUpdate.
type ReleaseUpdate struct {
	Notes *string `json:"notes,omitempty"`
}

// Releaseentry defines the model for releaseentry.
type Releaseentry struct {
	ChangeState        *string                 `json:"change_state,omitempty"`
	Complete           *bool                   `json:"complete,omitempty"`
	ContentHash        *string                 `json:"content_hash,omitempty"`
	ContentLink        *string                 `json:"content_link,omitempty"`
	ContentSize        *int                    `json:"content_size,omitempty"`
	ContentType        *string                 `json:"content_type,omitempty"`
	Entryid            *string                 `json:"entryid,omitempty"`
	Labels             *[]string               `json:"labels,omitempty"`
	LastModified       *time.Time              `json:"last_modified,omitempty"`
	LastModifiedBy     *string                 `json:"last_modified_by,omitempty"`
	LastModifiedByName *string                 `json:"last_modified_by_name,omitempty"`
	Link               *string                 `json:"link,omitempty"`
	Metadata           *map[string]interface{} `json:"metadata,omitempty"`
	Path               *string                 `json:"path,omitempty"`
	UpdatedAt          *time.Time              `json:"updated_at,omitempty"`
	Versionid          *string                 `json:"versionid,omitempty"`
}

// ReleaseentryCreate defines the model for releaseentryCreate.
type ReleaseentryCreate struct {
	Entryid   string `json:"entryid"`
	Versionid string `json:"versionid"`
}

// Usage defines the model for usage.
type Usage struct {
	Projectguid *string  `json:"projectguid,omitempty"`
	Quantity    *float32 `json:"quantity,omitempty"`
}

// User defines the model for user.
type User struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// Userapikey defines the model for userapikey.
type Userapikey struct {
	Apikey string `json:"apikey"`
}

// Version defines the model for version.
type Version struct {
	ContentHash  *string                 `json:"content_hash,omitempty"`
	ContentLink  *string                 `json:"content_link,omitempty"`
	ContentSize  *int                    `json:"content_size,omitempty"`
	ContentType  *string                 `json:"content_type,omitempty"`
	Labels       *[]string               `json:"labels,omitempty"`
	LastModified *time.Time              `json:"last_modified,omitempty"`
	Link         *string                 `json:"link,omitempty"`
	Metadata     *map[string]interface{} `json:"metadata,omitempty"`
	Path         *string                 `json:"path,omitempty"`
	Versionid    *string                 `json:"versionid,omitempty"`
}

// UpdateBucketJSONBody defines the parameters for UpdateBucket.
type UpdateBucketJSONBody BucketUpdate

// ListBucketAccessTokensParams defines the parameters for ListBucketAccessTokens.
type ListBucketAccessTokensParams struct {

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// CreateBucketAccessTokenJSONBody defines the parameters for CreateBucketAccessToken.
type CreateBucketAccessTokenJSONBody BucketaccesstokenCreate

// UpdateBucketAccessTokenInfoJSONBody defines the parameters for UpdateBucketAccessTokenInfo.
type UpdateBucketAccessTokenInfoJSONBody BucketaccesstokenUpdate

// ListBadgesParams defines the parameters for ListBadges.
type ListBadgesParams struct {

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// UpdateBadgeJSONBody defines the parameters for UpdateBadge.
type UpdateBadgeJSONBody BadgeAssign

// GetReleaseDiffParams defines the parameters for GetReleaseDiff.
type GetReleaseDiffParams struct {

	// From Release ID, specify 'latest' to use the most recent release. Either fromreleaseid or fromreleasenum can be specified, but not both.
	Fromreleaseid string `json:"fromreleaseid"`

	// From Release Number. To query against an empty bucket you may set fromreleasenum to zero. Either fromreleaseid or fromreleasenum can be specified, but not both.
	Fromreleasenum int `json:"fromreleasenum"`

	// To Release ID, when not specified the most recent state of the bucket will be used. Either toreleaseid or toreleasenum can be specified, but not both.
	Toreleaseid *string `json:"toreleaseid,omitempty"`

	// To Release ID, when not specified the most recent state of the bucket will be used. Either toreleaseid or toreleasenum can be specified, but not both.
	Toreleasenum *int `json:"toreleasenum,omitempty"`
}

// GetReleaseDiffEntriesParams defines the parameters for GetReleaseDiffEntries.
type GetReleaseDiffEntriesParams struct {

	// From Release ID, specify 'latest' to use the most recent release. Either fromreleaseid or fromreleasenum can be specified, but not both.
	Fromreleaseid *string `json:"fromreleaseid,omitempty"`

	// From Release Number. To query against an empty bucket you may set fromreleasenum to zero. Either fromreleaseid or fromreleasenum can be specified, but not both.
	Fromreleasenum *int `json:"fromreleasenum,omitempty"`

	// To Release ID, when not specified the most recent state of the bucket will be used. Either toreleaseid or toreleasenum can be specified, but not both.
	Toreleaseid *string `json:"toreleaseid,omitempty"`

	// To Release ID, when not specified the most recent state of the bucket will be used. Either toreleaseid or toreleasenum can be specified, but not both.
	Toreleasenum *int `json:"toreleasenum,omitempty"`

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`

	// Path
	Path *string `json:"path,omitempty"`

	// Include change states, one or more can be specified. The default is all states.
	IncludeStates *[]string `json:"include_states,omitempty"`
}

// GetDiffEntriesParams defines the parameters for GetDiffEntries.
type GetDiffEntriesParams struct {

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`

	// Path
	Path *string `json:"path,omitempty"`

	// Include change states, one or more can be specified. The default is all states.
	IncludeStates *[]string `json:"include_states,omitempty"`
}

// GetEntriesParams defines the parameters for GetEntries.
type GetEntriesParams struct {

	// Path
	Path *string `json:"path,omitempty"`

	// Label
	Label *string `json:"label,omitempty"`

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// CreateEntryJSONBody defines the parameters for CreateEntry.
type CreateEntryJSONBody EntryCreate

// GetContentParams defines the parameters for GetContent.
type GetContentParams struct {

	// Version ID
	Versionid *string `json:"versionid,omitempty"`
}

// GetContentStatusParams defines the parameters for GetContentStatus.
type GetContentStatusParams struct {

	// Version ID
	Versionid *string `json:"versionid,omitempty"`
}

// UploadContentParams defines the parameters for UploadContent.
type UploadContentParams struct {

	// Version ID
	Versionid *string `json:"versionid,omitempty"`
}

// CreateContentParams defines the parameters for CreateContent.
type CreateContentParams struct {

	// Version ID
	Versionid *string `json:"versionid,omitempty"`
}

// GetEntryVersionsParams defines the parameters for GetEntryVersions.
type GetEntryVersionsParams struct {

	// Label
	Label *string `json:"label,omitempty"`

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// GetEntryByPathParams defines the parameters for GetEntryByPath.
type GetEntryByPathParams struct {

	// Path
	Path string `json:"path"`

	// Version ID
	Versionid *string `json:"versionid,omitempty"`
}

// CreateOrUpdateEntryByPathJSONBody defines the parameters for CreateOrUpdateEntryByPath.
type CreateOrUpdateEntryByPathJSONBody EntryCreateByPath

// CreateOrUpdateEntryByPathParams defines the parameters for CreateOrUpdateEntryByPath.
type CreateOrUpdateEntryByPathParams struct {

	// Path
	Path string `json:"path"`

	// Set to 'true' if you want to update the existing entries
	UpdateIfExists *bool `json:"updateIfExists,omitempty"`
}

// UpdateEntryByPathParams defines the parameters for UpdateEntryByPath.
type UpdateEntryByPathParams struct {

	// Path
	Path string `json:"path"`
}

// DeletePermissionByBucketParams defines the parameters for DeletePermissionByBucket.
type DeletePermissionByBucketParams struct {

	// Permission of resource: allow, deny.
	Permission *string `json:"permission,omitempty"`

	// Permission action: write, read.
	Action *string `json:"action,omitempty"`
}

// CreatePermissionByBucketJSONBody defines the parameters for CreatePermissionByBucket.
type CreatePermissionByBucketJSONBody PermissionCreate

// UpdatePermissionByBucketJSONBody defines the parameters for UpdatePermissionByBucket.
type UpdatePermissionByBucketJSONBody PermissionUpdate

// PromoteBucketJSONBody defines the parameters for PromoteBucket.
type PromoteBucketJSONBody Promotebucket

// PromoteBucketAsyncJSONBody defines the parameters for PromoteBucketAsync.
type PromoteBucketAsyncJSONBody Promotebucket

// GetReleaseEntriesByBadgeParams defines the parameters for GetReleaseEntriesByBadge.
type GetReleaseEntriesByBadgeParams struct {

	// Label
	Label *string `json:"label,omitempty"`

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// GetReleasesParams defines the parameters for GetReleases.
type GetReleasesParams struct {

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// CreateReleaseJSONBody defines the parameters for CreateRelease.
type CreateReleaseJSONBody ReleaseCreate

// UpdateReleaseJSONBody defines the parameters for UpdateRelease.
type UpdateReleaseJSONBody ReleaseUpdate

// GetReleaseEntriesParams defines the parameters for GetReleaseEntries.
type GetReleaseEntriesParams struct {

	// Label
	Label *string `json:"label,omitempty"`

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// GetStatsParams defines the parameters for GetStats.
type GetStatsParams struct {

	// Select the metric for which you want the stats.
	Metric string `json:"metric"`

	// Select the time interval for which you want the stats.
	// day indicates last 24 hrs
	// week indicates last 7 days
	// month indicates last 30 days
	Interval string `json:"interval"`
}

// GetErrorDetailsParams defines the parameters for GetErrorDetails.
type GetErrorDetailsParams struct {

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`

	// Select the time interval for which you want the stats.
	// day indicates last 24 hrs
	// week indicates last 7 days
	// month indicates last 30 days
	Interval string `json:"interval"`
}

// SaveTosAcceptedJSONBody defines the parameters for SaveTosAccepted.
type SaveTosAcceptedJSONBody OrgTosUpdate

// ListBucketsByProjectParams defines the parameters for ListBucketsByProject.
type ListBucketsByProjectParams struct {

	// Current Page
	Page *int `json:"page,omitempty"`

	// Items Per Page
	PerPage *int `json:"per_page,omitempty"`
}

// CreateBucketByProjectJSONBody defines the parameters for CreateBucketByProject.
type CreateBucketByProjectJSONBody BucketCreate

// RegenerateUserApiKeyJSONBody defines the parameters for RegenerateUserApiKey.
type RegenerateUserApiKeyJSONBody Userapikey

// UpdateBucketJSONRequestBody defines body for UpdateBucket for application/json ContentType.
type UpdateBucketJSONRequestBody UpdateBucketJSONBody

// CreateBucketAccessTokenJSONRequestBody defines body for CreateBucketAccessToken for application/json ContentType.
type CreateBucketAccessTokenJSONRequestBody CreateBucketAccessTokenJSONBody

// UpdateBucketAccessTokenInfoJSONRequestBody defines body for UpdateBucketAccessTokenInfo for application/json ContentType.
type UpdateBucketAccessTokenInfoJSONRequestBody UpdateBucketAccessTokenInfoJSONBody

// UpdateBadgeJSONRequestBody defines body for UpdateBadge for application/json ContentType.
type UpdateBadgeJSONRequestBody UpdateBadgeJSONBody

// CreateEntryJSONRequestBody defines body for CreateEntry for application/json ContentType.
type CreateEntryJSONRequestBody CreateEntryJSONBody

// UpdateEntryJSONRequestBody defines body for UpdateEntry for application/json ContentType.
type UpdateEntryJSONRequestBody EntryUpdate

// CreateOrUpdateEntryByPathJSONRequestBody defines body for CreateOrUpdateEntryByPath for application/json ContentType.
type CreateOrUpdateEntryByPathJSONRequestBody CreateOrUpdateEntryByPathJSONBody

// UpdateEntryByPathJSONRequestBody defines body for UpdateEntryByPath for application/json ContentType.
type UpdateEntryByPathJSONRequestBody EntryUpdate

// CreatePermissionByBucketJSONRequestBody defines body for CreatePermissionByBucket for application/json ContentType.
type CreatePermissionByBucketJSONRequestBody CreatePermissionByBucketJSONBody

// UpdatePermissionByBucketJSONRequestBody defines body for UpdatePermissionByBucket for application/json ContentType.
type UpdatePermissionByBucketJSONRequestBody UpdatePermissionByBucketJSONBody

// PromoteBucketJSONRequestBody defines body for PromoteBucket for application/json ContentType.
type PromoteBucketJSONRequestBody PromoteBucketJSONBody

// PromoteBucketAsyncJSONRequestBody defines body for PromoteBucketAsync for application/json ContentType.
type PromoteBucketAsyncJSONRequestBody PromoteBucketAsyncJSONBody

// CreateReleaseJSONRequestBody defines body for CreateRelease for application/json ContentType.
type CreateReleaseJSONRequestBody CreateReleaseJSONBody

// UpdateReleaseJSONRequestBody defines body for UpdateRelease for application/json ContentType.
type UpdateReleaseJSONRequestBody UpdateReleaseJSONBody

// SaveTosAcceptedJSONRequestBody defines body for SaveTosAccepted for application/json ContentType.
type SaveTosAcceptedJSONRequestBody SaveTosAcceptedJSONBody

// CreateBucketByProjectJSONRequestBody defines body for CreateBucketByProject for application/json ContentType.
type CreateBucketByProjectJSONRequestBody CreateBucketByProjectJSONBody

// RegenerateUserApiKeyJSONRequestBody defines body for RegenerateUserApiKey for application/json ContentType.
type RegenerateUserApiKeyJSONRequestBody RegenerateUserApiKeyJSONBody
